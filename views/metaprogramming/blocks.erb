<section class="slide" id="blocks">
  <h2>Blocks and local variables</h2>

  <p>Scope defines where in a program a variable is accessible. Scope changes whenever the program enters (or exits) a class or module definition or a method. These three borders are marked by the keywords <strong>class, module,</strong> and <strong>def</strong>, respectively. Each of these keywords acts like a Scope&nbsp;Gate.</p>
 
  <p>Blocks behave like closures, they capture the scope they are defined at.</p>
  <div class="row">
  <script type="syntaxhighlighter" class="brush: ruby">
      <![CDATA[
        def my_method
          yield
        end

        top_level_variable = 1

        my_method do
          top_level_variable += 1
          local_to_block = 1
        end

        top_level_variable    # => 2
        local_to_block      # => Error!
]]>
  </script>
</div>
</section>
