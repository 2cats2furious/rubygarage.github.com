<section id="greedy-method" class="slide">
  <h2>Greedy Method</h2>
  <ul>
    <li>A method does more than one job.</li>
    <li>A method has “and” in its name.</li>
    <li>The body of a method includes code at several different levels of abstraction.</li>
  </ul>
  <h3>Problems</h3>
  <ul>
    <li>Communication: A code fragment that has two responsibilities intertwined is harder to read, and harder to name.</li>
    <li>Flexibility: If one of the method's responsibilities must change, or has a defect, you often have to work hard to sidestep the method's other responsibilities - it can therefore be a challenge to avoid breaking other code.</li>
    <li>Testability: A method that does two things will be harder to test than if the responsi - bilities were separated.</li>
  </ul>
  <h3>What to Do</h3>
  <ul>
    <li>Consider the approaches todealing with a <a href="#long-method">Long Method</a> they will often work here just as well. Use <a href="#extract-method-before">Extract Method</a> to hide detail behind an intention revealing name.</li>
    <li>If the method makes extensive use of another object, treat and fix the <a href="#feature-envy">Feature Envy</a>.</li>
  </ul>
</section>