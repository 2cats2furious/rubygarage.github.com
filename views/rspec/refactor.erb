<section id="refactor" class="slide">
  <h2>Refactor</h2>

  <p>"Refactoring is the process of changing a software system in such a way that it does not alter the external behavior of the code yet improves its internal structure."</p>

  <p>In this case, we have a very clear break between what is context and what is behavior, so letâ€™s take advantage of that and move the context to a block that is executed before each of the examples.</p>

  spec/codebreaker/game_spec.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    module Codebreaker
      describe Game do
        context "#start" do
          let(:game) { Game.new }

          before do
            game.start
          end

          it "saves secret code" do
            expect(game.instance_variable_get(:@secret_code)).not_to be_empty
          end

          it "saves 4 numbers secret code" do
            expect(game.instance_variable_get(:@secret_code)).to have(4).items
          end

          it "saves secret code with numbers from 1 to 6" do
            expect(game.instance_variable_get(:@secret_code)).to match(/[1-6]+/)
          end
        end
      end
    end
  </script>

  <script type="syntaxhighlighter" class="brush: bash">
    rspec spec/codebreaker/game_spec.rb 
    ...

    Finished in 0.00409 seconds
    3 examples, 0 failures
    MacBookPro-C8BCC89CA02E-2:codebreaker sparrow$ rspec spec/codebreaker/game_spec.rb 
    ...

    Finished in 0.00412 seconds
    3 examples, 0 failures
  </script>
</section>