<section id="writing-tests" class="slide">
  <h2>Writing tests</h2>
  <p>
    Let’s take a look at how tests are best structured. All tests should follow the same basic structure.
  </p>
  <div id="set-up-environment" class="slide">
    <h3>1. Set up environment for testing</h3>
    <p>
      Typically, methods perform some sort of operation upon data. So in order to test your methods, you’ll need to set up the data required by the method. This might be as simple as declaring a few variables, or as complex as creating a number of records in database.
    </p>
    <p>
      Your tests should always create their own test data to execute against. That way, you can be confident that your tests aren’t dependent upon the state of a particular environment and will be repeatable even if they are executed in a different environment from which they were written.
    </p>
    <p>
      If you find that many of your tests require very similar setup code, be sure to properly decompose the setup code so that you don’t repeat yourself.
    </p>
  </div>
  <div id="call-method" class="slide">
    <h3>2. Call the method being tested</h3>
    <p>
      Once you have set up the appropriate input data, you still need to execute your code. If you are testing a method, then you will call the method directly.
    </p>
  </div>
  <div id="verify-results" class="slide">
    <h3>3. Verify that the results are correct</h3>
    <p>
      Verifying that your code works as you expect it to work is the most important part of testing. Tests that do not verify the results of the code aren’t true tests. They are commonly referred to as smoke tests, which aren’t nearly as effective or informative as true tests.
    </p>
  </div>
  <div id="clean-up-environment" class="slide">
    <h3>4. Clean up environment</h3>
    <p>
      Environment always should be cleaned after a test running. That way, you can be confident that your next tests are not dependent upon the state of previous tests executing.
    </p>
  </div>
</section>