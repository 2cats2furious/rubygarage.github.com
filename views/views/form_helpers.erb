<section id="form-tag-helper" class="slide">
  <h2>FormTagHelper</h2>
  <p>Provides a number of methods for creating form tags that don't rely on an Active Record object assigned to the template like FormHelper does. Instead, names and values should be provided manually.</p>
  <p>form_tag, label_tag, text_field_tag, hidden_field_tag, submit_tag</p>
  <script type="syntaxhighlighter" class="brush: ruby">
      &lt;%= form_tag("/posts/search", method: 'get') do %&gt;
        &lt;%= label_tag(:q, "Search for:") %&gt;
        &lt;%= text_field_tag(:q) %&gt;
        &lt;%= hidden_field_tag(:special_id, "11") %&gt;
        &lt;%= submit_tag("Search")
      &lt;% end %&gt;
  </script>
  <script type="syntaxhighlighter" class="brush: ruby">
      <form accept-charset="UTF-8" action="/posts/search" method="get">
        <label for ="q"> Search for: </label>
        <input id ="q" name = "q" type = "text" />
        <input id ="special_id" name= "special_id" type = "hidden" value="11" />
        <input name = "commit" type ="submit" value= "Search" />
      </form>
  </script>
  You can find more details <a href= "http://api.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html" target="_blank"> here</a>
</section>
