<section id="database-cleaner" class="slide">
  <h2>Database Cleaner</h2>
  <p><a href="https://github.com/bmabey/database_cleaner" target="_blank">DatabaseCleaner</a> is a set of strategies for cleaning your database in Ruby. The original use case was to ensure a clean state during tests. Each strategy is a small amount of code but is code that is usually needed in any ruby app that is testing with a database.</p>
  spec/spec_helper.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    # This part turns off the default RSpec database cleansing strategy.
    config.use_transactional_fixtures = false

    config.before(:suite) do
      # This says that before the entire test suite runs, clear the test database out completely.
      # This gets rid of any garbage left over from interrupted or poorly-written tests - a common source of surprising test behavior.
      DatabaseCleaner.clean_with(:truncation)

      # This part sets the default database cleaning strategy to be transactions. 
      # Transactions are very fast, and for all the tests where they do work - that is, any test where the entire test runs in the RSpec process - they are preferable.
      DatabaseCleaner.strategy = :transaction
    end

    # These lines hook up database_cleaner around the beginning and end of each test, 
    # telling it to execute whatever cleanup strategy we selected beforehand.
    config.before(:each) do
      DatabaseCleaner.start
    end

    config.after(:each) do
      DatabaseCleaner.clean
    end
  </script>
</section>