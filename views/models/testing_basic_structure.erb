<section id="testing-basic-structure" class="slide">
  <h2>Basic structure</h2>

  <script type="syntaxhighlighter" class="brush: bash">
    rails g model User email:text name:text admin:boolena
      invoke  active_record
      create    db/migrate/20131223130327_create_users.rb
      create    app/models/user.rb
      invoke    rspec
      create      spec/models/user_spec.rb
      invoke      factory_girl
      create        spec/factories/users.rb  
  </script>

  app/models/user.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    class User < ActiveRecord::Base
      validates :email, :first_name, presence: true
      validates :email, uniqueness: true
      
      has_many :posts

      scope :admins, -> { where(admin: true) }

      after_update :email_changed, if: :email_changed?

      private

      def email_changed
        UserMailer.email_changed(self).deliver
      end
    end
  </script>

  app/mailers/user_mailer.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    class UserMailer < ActionMailer::Base
      default from: "from@example.com"

      def email_changed(user)
        # Sending email
      end
    end
  </script>

  spec/models/user_spec.rb
  <script type="syntaxhighlighter" class="brush: ruby">
    require 'spec_helper'

    describe User do 
      it "is invalid without an email"
      it "has unique email"
      it "is invalid without a name"

      it "has many posts"

      context ".admins" do
        it "returns list of admins"
        it "doesn't return regular users"
      end

      context "change email" do
        it "sends email changed notification"
        it "doesn't send email changed notification" do
      end
    end
  </script>
</section>