<section id="after-callbacks" class="slide">
  <h2>After_find and after_initialize</h2>
  <script type="syntaxhighlighter" class="brush: ruby">

    class User < ApplicationRecord
      after_initialize do |user|
        puts "You have initialized an object!"
      end

      after_find do |user|
        puts "You have found an object!"
      end
    end

    >> User.new
    You have initialized an object!
    => #<User id: nil, first_name: nil, email: nil, password: nil, created_at: nil, updated_at: nil, last_name: nil, receive_news: false>

    >> User.first
    You have found an object!
    You have initialized an object!
    => #<User id: 1, first_name: "Anna", email: "happy_ann@gmail.com", password: nil, created_at: "2013-06-02 17:23:02", updated_at: "2013-06-02 17:23:02", last_name: nil, receive_news: false>

  </script>

  <h2>After_touch</h2>

  <script type="syntaxhighlighter" class="brush: ruby">
    class User < ApplicationRecord
      after_touch do |user|
        puts "You have touched an object"
      end
    end

    >> u = User.create(name: 'Martin')
    => #<User id: 1, name: "Martin", created_at: "2016-04-14 21:17:49", updated_at: "2016-04-14 21:17:49">

    >> u.touch
    You have touched an object
    => true
  </script>

  <script type="syntaxhighlighter" class="brush: ruby">
    class Post < ApplicationRecord
      belongs_to :user, touch: true
      after_touch do
        puts 'An Post was touched'
      end
    end

    class User < ApplicationRecord
      has_many :posts
      after_touch :notify

      private
      def notify
        puts 'User was touched'
      end
    end

    >> @post = Post.last
    => #<Post id: 1, user_id: 1, created_at: "2016-04-15 17:08:32", updated_at:  "2016-04-15 17:08:32">

    # triggers @post.user.touch
    >> @post.touch
    User was touched
    An Post was touched
    => true
  </script>


</section>
