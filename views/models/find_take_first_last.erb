<section id="find-take-first-last" class="slide">
  <h2>find, take, first, last</h2>
  Find by a Primary Key
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.find(1)
        SELECT "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1  [["id", 1]]
        => #<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>
    ]]>
  </script>

  Using Multiple Primary Keys
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.find([1,2])
        SELECT "posts".* FROM "posts" WHERE "posts"."id" IN (1, 2)
        => [#<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>, #<Post id: 2, title: nil, text: "I'm waiting", created_at: "2013-06-15 16:56:03", updated_at: "2013-06-15 16:56:03", user_id: 1, blog_id: nil>] 
    ]]>
  </script>

  Take retrieves a record without any implicit ordering
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.take
        SELECT "posts".* FROM "posts" LIMIT 1
        => #<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>
    ]]>
  </script>

  Retrieves the first number of records specified by limit without any explicit ordering
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.take(2)
        SELECT "posts".* FROM "posts" LIMIT 2
        => [#<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>, #<Post id: 2, title: nil, text: "I'm waiting", created_at: "2013-06-15 16:56:03", updated_at: "2013-06-15 16:56:03", user_id: 1, blog_id: nil>]
    ]]>
  </script>

  First finds the first record ordered by the primary key
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.first
        SELECT "posts".* FROM "posts" ORDER BY "posts"."id" ASC LIMIT 1
        => #<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1> 
    ]]>
  </script>

  Finds the first number of records specified by limit ordered by primary key
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.first(2)
        SELECT "posts".* FROM "posts" ORDER BY "posts"."id" ASC LIMIT 2
        => [#<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>, #<Post id: 2, title: nil, text: "I'm waiting", created_at: "2013-06-15 16:56:03", updated_at: "2013-06-15 16:56:03", user_id: 1, blog_id: nil>]
    ]]>
  </script>

  Last finds the last record ordered by the primary key
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.last
        SELECT "posts".* FROM "posts" ORDER BY "posts"."id" DESC LIMIT 1
        => #<Post id: 2, title: nil, text: "I'm waiting", created_at: "2013-06-15 16:56:03", updated_at: "2013-06-15 16:56:03", user_id: 1, blog_id: nil>
    ]]>
  </script>

  Finds the number of records specified by limit ordered by primary key in descending order
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
      > Post.last(2)
        SELECT "posts".* FROM "posts" ORDER BY "posts"."id" DESC LIMIT 2
        => [#<Post id: 1, title: "Facebook’s New Colocation And Image Recognition Pat...", text: "Facebook’s empire was built on photo tags and shari...", created_at: "2013-06-09 17:07:29", updated_at: "2013-06-16 22:15:59", user_id: 1, blog_id: 1>, #<Post id: 2, title: nil, text: "I'm waiting", created_at: "2013-06-15 16:56:03", updated_at: "2013-06-15 16:56:03", user_id: 1, blog_id: nil>]
    ]]>
  </script>
</section>