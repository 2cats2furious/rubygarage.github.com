<section id="method-blocks" class="slide">
  <h2>Methods</h2>
  <h3>Blocks</h3>
  <p>
    A block is code that is passed to a method by using of either curly braces, {...}, or do...end syntax.
    It's common convention to use {...} for single line blocks, and do...end for multi-line blocks,
    but curly braces have higher precedence.
  </p>

  <h4>Using</h4>
  <p> 1. Passed as a method argument ,using the special & last-argument syntax sugar operator or a block_given?/yield pair. </p>
  <p> 2. As a Proc object (or the lambda). </p>
  <b>Important:</b>
  <p> 1. You can pass only one block to method.</p>
  <p> 2. Block should follow method arguments braces.</p>
  <p> 3. Block hasn't access to method local variables but we can pass them to block. And They can be changed inside block.</p>
  <p> 4. If method local variable has te same name as block local variable then method local variable is not availaba inside block.</p>
  <p> 5. Arguments number is important for method and not important for block.</p>
  <p> 6. if you want to pass as method argument you must use braces otherwise it is treated as block and rises an error.</p>
  <script type="syntaxhighlighter" class="brush: ruby">
    def double(p1)
      yield(p1*2)
    end

    double(3) { |val| "I got #{val}" }
    => "I got 6"

    double("tom") do |val|
      "Then I got #{val}"
    end
    => "Then I got tomtom"
  </script>
  <script type="syntaxhighlighter" class="brush: ruby">
    def try
      if block_given?
        yield
      else
        "no block"
      end
    end

    try
    => "no block"

    try { "hello" }
    => "hello"

    try do "hello" end
    => "hello"
  </script>
</section>
