<section id="build" class="slide">
  <h2>The Build Tools</h2>
  <p>
    If you've ever tried to install software from source in the Linux or Unix system, there is a high probability that you have already had contact with <scrong>make</scrong>. Installation process usually looks the same. First you change current directory to that containing uncompressed source code, then you type in following commands:
  </p>
  <script type="syntaxhighlighter" class="brush: bash">
    <![CDATA[
    ./configure
    make
    make install]]>
  </script>
  <p>
    Second and third lines are simply <scrong>make</scrong> program invocations. When launched, <scrong>make</scrong> first looks for the <scrong>Makefile</scrong>. The latter contains information about source files and dependencies between them. <scrong>make</scrong> sorts the dependencies topologically and tries to resolve them in proper order. So it goes like this: first, software developer specifies dependencies and then the build tool is responsible for handling them.
  </p>
  <p>
    Build tools can be used not only for source code compilation, but that was infact the task they were created for. In general, build tools are being used to automate tiresome and repeating tasks.
  </p>
</section>